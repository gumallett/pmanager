openapi: 3.0.0
servers:
  # Local server
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/gum/videos/1.0.0
  - description: local server
    url: https://localhost/gum/videos/1.0.0
info:
  description: This is an api for managing a p collection.
  version: "1.0.0"
  title: P collection api
  contact:
    email: sbc_blitzer@yahoo.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: videos
    description: Operations for videos
paths:
  /videos:
    get:
      tags:
        - videos
      summary: searches videos
      operationId: searchVideos
      description: |
        By passing in the appropriate options, you can search for
        available videos in the system
      parameters:
        - in: query
          name: q
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: page
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - in: query
          name: size
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
            default: 10
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoResponse'
        '400':
          description: bad input parameter
    post:
      tags:
        - videos
      summary: adds a videos item
      operationId: addVideo
      description: Adds an item to the system
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVideoResponse'
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoResponse'
        description: video item to add
  /videos/{id}:
    get:
      tags:
        - videos
      summary: get video
      operationId: getVideo
      description: |
        Gets one video's metadata
      parameters:
        - in: path
          name: id
          description: id of video to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: gets one video's metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoResponse'
        '400':
          description: bad input parameter
    put:
      tags:
        - videos
      summary: updates a video item
      operationId: updateVideo
      description: Updates a video
      parameters:
        - in: path
          name: id
          description: id of video to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: item updated
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoResponse'
        description: video item to update
    delete:
      tags:
        - videos
      summary: delete video
      operationId: deleteVideo
      description: |
        Deletes one video's metadata
      parameters:
        - in: path
          name: id
          description: id of video to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: video deleted
        '400':
          description: bad input parameter
  /videos/{id}/view:
    get:
      tags:
        - videos
      summary: downloads video
      operationId: downloadVideo
      description: |
        Downloads a video for viewing
      parameters:
        - in: path
          name: id
          description: id of video to fetch
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: download
          description: Download the file as an attachment
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: View or download video
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: bad input parameter
components:
  schemas:
    CreateVideoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 222
    VideoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 222
        title:
          type: string
          example: A video
        description:
          type: string
          example: A video
        uri:
          type: string
          example: file://xy/y/z.mp4
        source:
          type: string
          example: www.example.com
        rating:
          type: integer
          format: int16
          example: 5
        views:
          type: integer
          format: int64
          example: 1
        notes:
          type: string
          example: A video
        videoFileInfo:
          $ref: '#/components/schemas/VideoFileInfoResponse'
        lastAccessed:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        lastModified:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryResponse'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    CategoryResponse:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
      type: object
    TagResponse:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
      type: object
    VideoFileInfoResponse:
      type: object
      properties:
        filename:
          type: string
          example: video.mp4
        contentType:
          type: string
          example: video/mp4
        size:
          type: integer
          format: int64
          example: 10000
        length:
          type: integer
          format: int64
          example: 12345
        width:
          type: integer
          format: int64
          example: 12345
        height:
          type: integer
          format: int64
          example: 12345
        createDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'